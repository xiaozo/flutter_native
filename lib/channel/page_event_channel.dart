// Autogenerated from Pigeon (v0.2.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon
// ignore_for_file: public_member_api_docs, non_constant_identifier_names, avoid_as, unused_import, unnecessary_parenthesis, prefer_null_aware_operators, omit_local_variable_types
// @dart = 2.12
import 'dart:async';
import 'dart:typed_data' show Uint8List, Int32List, Int64List, Float64List;

import 'package:flutter/services.dart';

class FEvent {
  String? uniqueId;
  String? event;
  Map<Object?, Object?>? params;

  Object encode() {
    final Map<Object?, Object?> pigeonMap = <Object?, Object?>{};
    pigeonMap['uniqueId'] = uniqueId;
    pigeonMap['event'] = event;
    pigeonMap['params'] = params;
    return pigeonMap;
  }

  static FEvent decode(Object message) {
    final Map<Object?, Object?> pigeonMap = message as Map<Object?, Object?>;
    return FEvent()
      ..uniqueId = pigeonMap['uniqueId'] as String?
      ..event = pigeonMap['event'] as String?
      ..params = pigeonMap['params'] as Map<Object?, Object?>?;
  }
}

abstract class PageEventApi {
  void postEvent(FEvent arg);
  static void setup(PageEventApi? api) {
    {
      const BasicMessageChannel<Object?> channel = BasicMessageChannel<Object?>(
          'dev.flutter.pigeon.PageEventApi.postEvent', StandardMessageCodec());
      if (api == null) {
        channel.setMessageHandler(null);
      } else {
        channel.setMessageHandler((Object? message) async {
          assert(message != null, 'Argument for dev.flutter.pigeon.PageEventApi.postEvent was null. Expected FEvent.');
          final FEvent input = FEvent.decode(message!);
          api.postEvent(input);
          return;
        });
      }
    }
  }
}
