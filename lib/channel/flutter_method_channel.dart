// Autogenerated from Pigeon (v0.2.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon
// ignore_for_file: public_member_api_docs, non_constant_identifier_names, avoid_as, unused_import, unnecessary_parenthesis, prefer_null_aware_operators, omit_local_variable_types
// @dart = 2.12
import 'dart:async';
import 'dart:typed_data' show Uint8List, Int32List, Int64List, Float64List;

import 'package:flutter/services.dart';

class FScreenshotResult {
  Uint8List? imageBytes;

  Object encode() {
    final Map<Object?, Object?> pigeonMap = <Object?, Object?>{};
    pigeonMap['imageBytes'] = imageBytes;
    return pigeonMap;
  }

  static FScreenshotResult decode(Object message) {
    final Map<Object?, Object?> pigeonMap = message as Map<Object?, Object?>;
    return FScreenshotResult()
      ..imageBytes = pigeonMap['imageBytes'] as Uint8List?;
  }
}

abstract class FlutterMethodApi {
  Future<FScreenshotResult> screenshot();
  static void setup(FlutterMethodApi? api) {
    {
      const BasicMessageChannel<Object?> channel = BasicMessageChannel<Object?>(
          'dev.flutter.pigeon.FlutterMethodApi.screenshot', StandardMessageCodec());
      if (api == null) {
        channel.setMessageHandler(null);
      } else {
        channel.setMessageHandler((Object? message) async {
          // ignore message
          final FScreenshotResult output = await api.screenshot();
          return output.encode();
        });
      }
    }
  }
}
