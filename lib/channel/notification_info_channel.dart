// Autogenerated from Pigeon (v0.2.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon
// ignore_for_file: public_member_api_docs, non_constant_identifier_names, avoid_as, unused_import, unnecessary_parenthesis, prefer_null_aware_operators, omit_local_variable_types
// @dart = 2.12
import 'dart:async';
import 'dart:typed_data' show Uint8List, Int32List, Int64List, Float64List;

import 'package:flutter/services.dart';

class FNotificationInfo {
  String? notificationName;
  Map<Object?, Object?>? notificationObject;

  Object encode() {
    final Map<Object?, Object?> pigeonMap = <Object?, Object?>{};
    pigeonMap['notificationName'] = notificationName;
    pigeonMap['notificationObject'] = notificationObject;
    return pigeonMap;
  }

  static FNotificationInfo decode(Object message) {
    final Map<Object?, Object?> pigeonMap = message as Map<Object?, Object?>;
    return FNotificationInfo()
      ..notificationName = pigeonMap['notificationName'] as String?
      ..notificationObject = pigeonMap['notificationObject'] as Map<Object?, Object?>?;
  }
}

abstract class NotificationInfoApi {
  void receiveNotificationInfo(FNotificationInfo arg);
  static void setup(NotificationInfoApi? api) {
    {
      const BasicMessageChannel<Object?> channel = BasicMessageChannel<Object?>(
          'dev.flutter.pigeon.NotificationInfoApi.receiveNotificationInfo', StandardMessageCodec());
      if (api == null) {
        channel.setMessageHandler(null);
      } else {
        channel.setMessageHandler((Object? message) async {
          assert(message != null, 'Argument for dev.flutter.pigeon.NotificationInfoApi.receiveNotificationInfo was null. Expected FNotificationInfo.');
          final FNotificationInfo input = FNotificationInfo.decode(message!);
          api.receiveNotificationInfo(input);
          return;
        });
      }
    }
  }
}
