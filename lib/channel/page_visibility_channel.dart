// Autogenerated from Pigeon (v0.2.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon
// ignore_for_file: public_member_api_docs, non_constant_identifier_names, avoid_as, unused_import, unnecessary_parenthesis, prefer_null_aware_operators, omit_local_variable_types
// @dart = 2.12
import 'dart:async';
import 'dart:typed_data' show Uint8List, Int32List, Int64List, Float64List;

import 'package:flutter/services.dart';

class FPageVisibility {
  String? uniqueId;

  Object encode() {
    final Map<Object?, Object?> pigeonMap = <Object?, Object?>{};
    pigeonMap['uniqueId'] = uniqueId;
    return pigeonMap;
  }

  static FPageVisibility decode(Object message) {
    final Map<Object?, Object?> pigeonMap = message as Map<Object?, Object?>;
    return FPageVisibility()
      ..uniqueId = pigeonMap['uniqueId'] as String?;
  }
}

abstract class PageVisibilityApi {
  void onAppear();
  void onSinglePageAppear(FPageVisibility arg);
  void onSinglePageDisappear(FPageVisibility arg);
  static void setup(PageVisibilityApi? api) {
    {
      const BasicMessageChannel<Object?> channel = BasicMessageChannel<Object?>(
          'dev.flutter.pigeon.PageVisibilityApi.onAppear', StandardMessageCodec());
      if (api == null) {
        channel.setMessageHandler(null);
      } else {
        channel.setMessageHandler((Object? message) async {
          // ignore message
          api.onAppear();
          return;
        });
      }
    }
    {
      const BasicMessageChannel<Object?> channel = BasicMessageChannel<Object?>(
          'dev.flutter.pigeon.PageVisibilityApi.onSinglePageAppear', StandardMessageCodec());
      if (api == null) {
        channel.setMessageHandler(null);
      } else {
        channel.setMessageHandler((Object? message) async {
          assert(message != null, 'Argument for dev.flutter.pigeon.PageVisibilityApi.onSinglePageAppear was null. Expected FPageVisibility.');
          final FPageVisibility input = FPageVisibility.decode(message!);
          api.onSinglePageAppear(input);
          return;
        });
      }
    }
    {
      const BasicMessageChannel<Object?> channel = BasicMessageChannel<Object?>(
          'dev.flutter.pigeon.PageVisibilityApi.onSinglePageDisappear', StandardMessageCodec());
      if (api == null) {
        channel.setMessageHandler(null);
      } else {
        channel.setMessageHandler((Object? message) async {
          assert(message != null, 'Argument for dev.flutter.pigeon.PageVisibilityApi.onSinglePageDisappear was null. Expected FPageVisibility.');
          final FPageVisibility input = FPageVisibility.decode(message!);
          api.onSinglePageDisappear(input);
          return;
        });
      }
    }
  }
}
